1 - 
	Ic = B*Ib 
	4 = 100*Ib 
	Ib = 40 mA	Como Ib é maior que 10mA, deve-se usar o transistor par Darlignton.

Calculo de Ib e da resistência:
	Ic = Ib*B^2 
	4 = Ib*100^2 
	Ib = 0.4 mA
	
	Rb = (Vcc-2*Vbe)/Ib 
	Rb = (3-2*0.7)/0.4*10^(-3) 
	Rb = 4 kOhm


2 - 
	Ic = B*Ib 
	1 = 120*Ib 
	Ib = 8.33 mA	Como Ib é menor que Ib pode-se usar o transistor bipolar.

Calculo da resistência
	Rb = (Vcc-Vbe)/Ib 
	Rb = (3.5-0.7)/8.33*10^(-3) 
	Rb = 336 Ohm

4 -

void main(void)
{
    while(1)
    {
	//Ligando LED1
		P1DIR = (P1DIR|(BIT1+BIT2))&(~BIT0)
		P1OUT = (P1OUT|BIT1)&(~BIT2);
        //Ligando LED2
		P1DIR = (P1DIR|(BIT1+BIT2))&(~BIT0)
		P1OUT = (P1OUT|BIT2)&(~BIT1);
        //Ligando LED3
		P1DIR = (P1DIR|(BIT0+BIT1))&(~BIT2)
		P1OUT = (P1OUT|BIT0)&(~BIT1);
        //Ligando LED4
		P1DIR = (P1DIR|(BIT0+BIT1))&(~BIT2)
		P1OUT = (P1OUT|BIT1)&(~BIT0);
        //Ligando LED5
		P1DIR = (P1DIR|(BIT0+BIT2))&(~BIT1)
		P1OUT = (P1OUT|BIT0)&(~BIT2);
        //Ligando LED6
		P1DIR = (P1DIR|(BIT0+BIT2))&(~BIT1)
		P1OUT = (P1OUT|BIT2)&(~BIT0);
	}
}


5 - 

void main(void)
{
    volatile unsigned int i;
    while(1)
    {
	for(i = 330000; i > 0; i--)
	{
            //Ligando LED1
            P1DIR = (P1DIR|(BIT1+BIT2))&(~BIT0)
            P1OUT = (P1OUT|BIT1)&(~BIT2);
            //Ligando LED2
            P1DIR = (P1DIR|(BIT1+BIT2))&(~BIT0)
            P1OUT = (P1OUT|BIT2)&(~BIT1);
        }
        for(i = 330000; i > 0; i--)
	{
            //Ligando LED3
            P1DIR = (P1DIR|(BIT0+BIT1))&(~BIT2)
            P1OUT = (P1OUT|BIT0)&(~BIT1);
            //Ligando LED4
            P1DIR = (P1DIR|(BIT0+BIT1))&(~BIT2)
            P1OUT = (P1OUT|BIT1)&(~BIT0);
        }
        for(i = 330000; i > 0; i--)
	{
            //Ligando LED5
            P1DIR = (P1DIR|(BIT0+BIT2))&(~BIT1)
            P1OUT = (P1OUT|BIT0)&(~BIT2);
            //Ligando LED6
            P1DIR = (P1DIR|(BIT0+BIT2))&(~BIT1)
            P1OUT = (P1OUT|BIT2)&(~BIT0);
	}
    }
}

6 - 

#define SA BIT0
#define SB BIT1
#define SC BIT2
#define SD BIT3
#define SE BIT4
#define SF BIT5
#define SG BIT6

void EscreveDigito(volatile char dig)
{
	P1OUT = 0;
	switch(dig)
	{
		case 'A':
			P1OUT |= (SA + SB + SC + SE + SF);
			break;
		case 'B':
			P1OUT |= (SF + SE + SC + SD + SG);
			break;
		case 'C':
			P1OUT |= (SA + SF + SE + SD);
			break;
		case 'D':
			P1OUT |= ~(SA + SF);
			break;
		case 'E':
			P1OUT |= ~(SB + SC);
			break;
		case 'F':
			P1OUT |= ~(SB + SC + SD);
			break;
		case '9':
			P1OUT |= ~(SD + SE);
			break;
		case '8':
			P1OUT ˆ= (P1OUT);
			break;
		case '7':
			P1OUT |= (SA + SB + SC);
			break;
		case '6':
			P1OUT |= ~(SB);
			break;
		case '5':
			P1OUT |= ~(SB + SE);
			break;
		case '4':
			P1OUT |= ~(SA + SE + SD);
			break;
		case '3':
			P1OUT |= ~(SF + SE);
			break;
		case '2':
			P1OUT |= ~(SF + SC);
			break;
		case '1':
			P1OUT |= (SB + SC);
			break;
		case '0':
			P1OUT |= ~(SG);
			break;	
		default:
			break;
	}
}


7 - 

#define DISPLAYOUT P2OUT
#define DISPLAY1 BIT0
#define DISPLAY2 BIT1

void Atraso_ms(volatile unsigned int ms); //Função para delay com timer.

void SeqTeste()
{
	for(int i = 0; i <= 9; i++)
	{
		DISPLAYOUT |= DISPLAY1 + ~DISPLAY2;
		EscreveDigito((char) '0'+i);
		Atraso_ms(10);
		DISPLAYOUT |= DISPLAY2 + ~DISPLAY1;
		EscreveDigito((char) '0'+i);
		Atraso_ms(10);
	}
		for(int i = 0; i <= 6; i++)
	{
		DISPLAYOUT |= DISPLAY1 + ~DISPLAY2;
		EscreveDigito((char) 'A'+i);
		Atraso_ms(10);
		DISPLAYOUT |= DISPLAY2 + ~DISPLAY1;
		EscreveDigito((char) 'A'+i);
		Atraso_ms(10);
	}
}

void Atraso_ms(volatile unsigned int ms)
{
	TACCR0 = 1000-1;
	TACTL = TACLR;
	TACTL = TASSEL_2 + ID_0 + MC_1;
	while(ms--)
	{
		while((TACTL&TAIFG)==0);
		TACTL &= ~TAIFG;
	}
	TACTL = MC_0;
}
